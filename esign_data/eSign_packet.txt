//// 아래는 PORT1에 256개, PORT2에 256개, PORT3에 256개, PORT4에 256개
////        PORT5에 256개, PORT6에   0개, PORT7에   0개, PORT8에   0개
//// 총 1280개의 pixel 데이터를 전송하는 실제 데이터를 덤프한 결과이다
//// RGB 데이터는 총 1280x3 = 3840 bytes이며
//// 첫번째 패킷에는 1350byte, 두번째 패킷에는 1350byte, 세번째 패킷에는 1140 byte의 RGB 정보를 포함하여 전송했다


///////////// 첫번째 패킷 ////////////////////
16161616    // FRAME SYN
0000        // ID
30          // Command 실시간 데이터 전송
6205        // Length 0x0562=1378 bytes ( 28byte의 기본정보 + 1350byte의 RGB데이터)
// data 부분
0000        // frame index
01          // image 적용 모드 (0x01:전체데이터 정상수신시 즉시 표출)
05          // port수 (기존에 제가 구현했던 시스템에서는 5port로 사용했습니다)
0001        // port 1에는 클러스터가 0x0100=256개가 달려있다
0001        // port 2에는 클러스터가 0x0100=256개가 달려있다
0001        // port 3에는 클러스터가 0x0100=256개가 달려있다
0001        // port 4에는 클러스터가 0x0100=256개가 달려있다
0001        // port 5에는 클러스터가 0x0100=256개가 달려있다
0000        // port 6에는 클러스터가 0x0000=  0개가 달려있다
0000        // port 7에는 클러스터가 0x0000=  0개가 달려있다
0000        // port 8에는 클러스터가 0x0000=  0개가 달려있다
B80B        // Image 표출유지시간 (0x0BB8=3000, 3초동안 UDP 프레임을 받지 못하면 기본 내장된 이미지를 현시한다)
31          // Packet Index (hi 0x3: 1 프레임에 전송시 3packet이 전송된다, lo 0x1 : 현재 전송하는 패킷은 첫번째이다)
00          // reserved
0000        // 전송시작위치 (처음이므로 0)
4605        // 전송데이터 크기 (0x0546=1350 bytes)
// 이후 1350 bytes의 rgb 데이터가 온다
// port 1의 1번 클러스터부터 256번 클러스터까지 RGB값 중 첫번째 클러스터만 Red이다.
FF0000 000000 000000 000000 000000 000000 000000 000000  
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000
000000 000000 000000 000000 000000 000000 000000 000000
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
// port 2의 1번 클러스터부터 256번 클러스터까지 RGB값 중 첫번째 클러스터만 Red이다.
// 1번부터 194번 클러스터 까지만 왔다.
FF0000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 
6B4F       // CRC
F5         // ETX

///////////// 두번째 패킷 ////////////////////
16161616    // FRAME SYN
0000        // ID
30          // Command 실시간 데이터 전송
6205        // Length 0x0562=1378 bytes ( 28byte의 기본정보 + 1350byte의 RGB데이터)
// data 부분
0000        // frame index(별도의 frame index증가처리를 하지 않아도 무방)
01          // image 적용 모드 (0x01:전체데이터 정상수신시 즉시 표출)
05          // port수 (기존에 제가 구현했던 시스템에서는 5port로 사용했습니다)
0001        // port 1에는 클러스터가 0x0100=256개가 달려있다
0001        // port 2에는 클러스터가 0x0100=256개가 달려있다
0001        // port 3에는 클러스터가 0x0100=256개가 달려있다
0001        // port 4에는 클러스터가 0x0100=256개가 달려있다
0001        // port 5에는 클러스터가 0x0100=256개가 달려있다
0000        // port 6에는 클러스터가 0x0000=  0개가 달려있다
0000        // port 7에는 클러스터가 0x0000=  0개가 달려있다
0000        // port 8에는 클러스터가 0x0000=  0개가 달려있다
B80B        // Image 표출유지시간 (0x0BB8=3000, 3초동안 UDP 프레임을 받지 못하면 기본 내장된 이미지를 현시한다)
32          // Packet Index (hi 0x3: 1 프레임에 전송시 3packet이 전송된다, lo 0x2 : 현재 전송하는 패킷은 두번째이다)
00          // reserved
4605        // 전송시작위치 (0x0546=1350 번째의 데이터이다.)
4605        // 전송데이터 크기 (0x0546=1350 bytes)
// 이후 1350 bytes의 rgb 데이터가 온다
// port 2의 195번 클러스터부터 256번 클러스터까지
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 
// port 3의 1번 클러스터부터 256번 클러스터까지 RGB값 중 첫번째 클러스터만 Red이다.
FF0000 000000 000000 000000 000000 000000 000000 000000  
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000
000000 000000 000000 000000 000000 000000 000000 000000
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
// port 4의 1번 클러스터부터 256번 클러스터까지 RGB값 중 첫번째 클러스터만 Red이다.
// 1번부터 132번 클러스터 까지만 왔다.
FF0000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 
44C7 // CRC
F5   // ETX

///////////// 세번째 패킷 ////////////////////
16161616    // FRAME SYN
0000        // ID
30          // Command 실시간 데이터 전송
9004        // Length 0x0490=1168 bytes ( 28byte의 기본정보 + 1140byte의 RGB데이터)
// data 부분
0000        // frame index(별도의 frame index증가처리를 하지 않아도 무방)
01          // image 적용 모드 (0x01:전체데이터 정상수신시 즉시 표출)
05          // port수 (기존에 제가 구현했던 시스템에서는 5port로 사용했습니다)
0001        // port 1에는 클러스터가 0x0100=256개가 달려있다
0001        // port 2에는 클러스터가 0x0100=256개가 달려있다
0001        // port 3에는 클러스터가 0x0100=256개가 달려있다
0001        // port 4에는 클러스터가 0x0100=256개가 달려있다
0001        // port 5에는 클러스터가 0x0100=256개가 달려있다
0000        // port 6에는 클러스터가 0x0000=  0개가 달려있다
0000        // port 7에는 클러스터가 0x0000=  0개가 달려있다
0000        // port 8에는 클러스터가 0x0000=  0개가 달려있다
B80B        // Image 표출유지시간 (0x0BB8=3000, 3초동안 UDP 프레임을 받지 못하면 기본 내장된 이미지를 현시한다)
33          // Packet Index (hi 0x3: 1 프레임에 전송시 3packet이 전송된다, lo 0x3 : 현재 전송하는 패킷은 세번째이다)
00          // reserved
8C0A        // 전송시작위치 (0x0A8C=2700 번째의 데이터이다.)
7404        // 전송데이터 크기 (0x0474=1140 bytes)
// 이후 1140 bytes의 rgb 데이터가 온다
// port 4의 133번 클러스터부터 256번 클러스터까지
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 
// port 5의 1번 클러스터부터 256번 클러스터까지 RGB값 중 첫번째 클러스터만 Red이다.
FF0000 000000 000000 000000 000000 000000 000000 000000  
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000
000000 000000 000000 000000 000000 000000 000000 000000
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
000000 000000 000000 000000 000000 000000 000000 000000 
A71F // CRC
F5   // ETX